@page "/xkcdcomicsviewer"
@using Radzen

@inject IComicUrlService ComicUrlService

<h5>Click to see XKCD comic strip</h5>

<br />

<div>
    <RadzenButton Click="@GetPreviousComic" ButtonStyle="ButtonStyle.Secondary" Text="< Take me back" />
    <RadzenButton Click="@GetXkcdComic" Text="Random"></RadzenButton>
    <RadzenButton Click="@GetNextComic" ButtonStyle="ButtonStyle.Secondary" Text="Next one please >" />
</div>

<br />

<SpinLoader IsLoading="_isLoading">
    <LoadingTemplate>
        <div class="col-12" style="background-color: transparent; vertical-align: middle"></div>
        <br />
        <br />
        <Swing Center="true" Size="100px"></Swing>
    </LoadingTemplate>
    <ContentTemplate>
        <picture>
            <img src="@_fileResult" class="img-thumbnail" alt="Comic Loading...">
        </picture>
    </ContentTemplate>
</SpinLoader>

@code {

    private bool _isLoading = false;

    private string _fileResult = "images/xkcd.jpg";

    private IList<string> _imageList;

    private int _currentIndex;

    protected override void OnInitialized()
    {
        _imageList = new List<string>
        {
            "images/xkcd.jpg"
        };
    }

    private async Task GetXkcdComic()
    {
        _isLoading = true;
        _fileResult = await ComicUrlService.GetXkcdComic();
        _imageList.Add(_fileResult);
        _isLoading = false;
    }

    private void GetPreviousComic()
    {
        _currentIndex = _imageList.IndexOf(_fileResult);

        if (_currentIndex > 0)
        {
            _fileResult = _imageList[_currentIndex - 1];
        }
    }

    private async Task GetNextComic()
    {
        _currentIndex = _imageList.IndexOf(_fileResult);

        int listCount = _imageList.Count;

        if (_currentIndex == listCount - 1)
        {
            await this.GetXkcdComic();
        }

        if (_currentIndex < listCount - 1)
        {
            _fileResult = _imageList[_currentIndex + 1];
        }
    }
}
